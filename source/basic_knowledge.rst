======================================
Basic Knowledge
======================================

動作環境
========

- iOS バージョンについて、iOS4（3GS 以外）、iOS5 以降に対応しております。また系統ごとに最新版を推奨致します。
- iOS 系デバイスについて、iPod touch初代・iPhone 3Gには対応しておりません。
- iOS4 + 3GS の組み合わせは非推奨と致しております。
- Android については、Android 2.3 以降、論理コア数2以上の端末を推奨致します。


ご利用上の注意
==============

- SWF ファイルは非圧縮のもの (FWS) にのみ対応しています


ドメイン制約の回避
===================


Pex では XHR (XMLHttpRequest) を使用して SWF ファイルを取得するので、HTML を表示するドメインと SWF ファイルの設置ドメインが異なる場合、ブラウザのセキュリティ制限から SWF ファイルが取得できません。


これを回避するには HTTP Response Header に次の内容を追加する必要があります。

::

	Access-Control-Allow-Origin: *


キャッシュの利用
===================

Pex のコアである pex.min.js は静的なファイルなのでブラウザのキャッシュに乗せることで起動時間を高速化させることができます。

次のようにファイル名にクエリー文字列を付与することで、バージョンが変わった時でも簡単に再キャッシュさせることができます。

::

	<script type="text/javascript" src="pex.min.js?version=3"></script>



SWF から JavaScript の実行
==========================

Pex 上で動かす SWF では、ActionScript の fscommand2 の第1引数に "JavaScript" という文字列を渡すことで指定した JavaScript の関数を実行することができます。


fscommand2 の形式は次のとおりです。

.. code-block:: actionscript

	fscommand2("JavaScript", func[, arg1, ..., argN])


それぞれの引数の意味は次のとおりです。

+--------------+------------------------------------------+
| 引数名       | 概要                                     |
+==============+==========================================+
| func         | 関数名を表す文字列                       |
+--------------+------------------------------------------+
| arg1         | 指定した関数の第1引数                    |
+--------------+------------------------------------------+
| argN         | 指定した関数の第N引数                    |
+--------------+------------------------------------------+


SWF から alert 関数を呼び出して "Hellow World!" を表示するには次のように指定します。

.. code-block:: actionscript

	fscommand2("JavaScript", "alert", "Hellow World!")



注意点
------

- 関数内で this を使用している関数は使用できません
- 引数として数値を渡しても文字列として扱われます（arg1 + arg2 は文字列の結合になります）


スキップされないフレームを設定する
==================================

Pex では本来の FPS を維持するために描画するフレームを間引くことがありますが、フレームラベルに "_noskip" を設定することでそのフレームを確実に描画させることができます。
なお、"_noskip" は大文字と小文字を区別しないので "_noSkip" でも同じ効果を持ちます。

debug オプションを true にすると、_noskip ラベルの付いたフレームを描画する際にコンソールに "noskip frame and force rendering" と表示されます。




